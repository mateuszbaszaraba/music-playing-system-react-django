{"version":3,"sources":["components/RoomJoinPage.tsx","components/CreateRoomPage.tsx","components/Room.tsx","components/HomePage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RoomJoinPage","useState","roomCode","setRoomCode","error","setError","navigate","useNavigate","roomButtonPressed","a","requestOptions","method","headers","body","JSON","stringify","code","fetch","status","Grid","container","direction","justifyContent","alignItems","spacing","item","xs","Typography","variant","component","TextField","label","placeholder","value","helperText","onChange","event","target","Button","color","onClick","to","Link","CreateRoomPage","props","defaultProps","votesToSkipProp","guestCanPauseProp","updateProp","roomCodeProp","updateCallBackProp","votesToSkip","setVotesToSkip","guestCanPause","setGuestCanPause","successMsg","setSuccessMsg","errorMsg","setErrorMsg","handleRoomButtonPressed","votes_to_skip","guest_can_pause","feedBack","json","jsonFeedBack","console","log","handleUpdateButtonPressed","ok","title","Collapse","in","FormControl","FormLabel","RadioGroup","row","defaultValue","toString","FormControlLabel","control","Radio","labelPlacement","required","type","inputProps","min","style","textAlign","FormHelperText","Room","isHost","setIsHost","showSettings","setShowSettings","spotifyAuthenticated","setSpotifyAuthenticated","song","setSong","useParams","getRoomDetails","response","leaveRoomCallBack","is_host","authenticateSpotify","responseJson","window","location","replace","url","getCurrentSong","leaveRoomHandler","useEffect","interval","setInterval","clearInterval","HomePage","checkIfInRoom","HomePageComponent","ButtonGroup","disableElevation","path","element","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d26c9da.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport { Button, Grid, Typography, TextField } from '@mui/material'\nconst RoomJoinPage = () => {\n  const [roomCode, setRoomCode] = useState('')\n  const [error, setError] = useState('')\n\n  let navigate = useNavigate()\n\n  const handleTextFieldChange = (event: any) => {\n    setRoomCode(event.target.value)\n  }\n\n  const roomButtonPressed = async () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        code: roomCode,\n      }),\n    }\n\n    const feedBack = await fetch('/api/join-room', requestOptions)\n    if (feedBack.status == 200) {\n      navigate(`/room/${roomCode}`)\n    } else {\n      setError('Room not found')\n    }\n  }\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      spacing={1}\n    >\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" component=\"h4\">\n          Join a Room\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <TextField\n          label=\"Code\"\n          placeholder=\"Enter a Room Code\"\n          value={roomCode}\n          helperText={error}\n          variant=\"outlined\"\n          onChange={handleTextFieldChange}\n        />\n      </Grid>\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={roomButtonPressed}\n        >\n          Enter Room\n        </Button>\n      </Grid>\n      <Grid item xs={12}>\n        <Button variant=\"contained\" color=\"primary\" to=\"/\" component={Link}>\n          Back\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default RoomJoinPage\n","import React, { useState } from 'react'\nimport { Link, useNavigate } from 'react-router-dom'\nimport {\n  Button,\n  Grid,\n  Typography,\n  TextField,\n  FormControl,\n  FormControlLabel,\n  FormHelperText,\n  Radio,\n  RadioGroup,\n  Collapse,\n  FormLabel,\n} from '@mui/material'\n\nconst CreateRoomPage: React.FC<{\n  votesToSkipProp: Number\n  guestCanPauseProp: Boolean\n  updateProp: Boolean\n  roomCodeProp: String\n  updateCallBackProp: Function\n}> = props => {\n  CreateRoomPage.defaultProps = {\n    votesToSkipProp: 2,\n    guestCanPauseProp: true,\n    updateProp: false,\n    roomCodeProp: '',\n    updateCallBackProp: () => {},\n  }\n  const [votesToSkip, setVotesToSkip] = useState(props.votesToSkipProp)\n  const [guestCanPause, setGuestCanPause] = useState(props.guestCanPauseProp)\n  const [successMsg, setSuccessMsg] = useState('')\n  const [errorMsg, setErrorMsg] = useState('')\n\n  let navigate = useNavigate()\n\n  const handleVotesChange = (event: any) => {\n    setVotesToSkip(event.target.value)\n  }\n\n  const handleGuestCanPause = (event: any) => {\n    setGuestCanPause(event.target.value === 'true' ? true : false)\n  }\n\n  const handleRoomButtonPressed = async () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        votes_to_skip: votesToSkip,\n        guest_can_pause: guestCanPause,\n      }),\n    }\n\n    const feedBack = await fetch('/api/create-room', requestOptions)\n    const jsonFeedBack = await feedBack.json()\n    console.log(jsonFeedBack)\n\n    navigate(`/room/${jsonFeedBack.code}`)\n  }\n\n  const handleUpdateButtonPressed = async () => {\n    const requestOptions = {\n      method: 'PATCH',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        votes_to_skip: votesToSkip,\n        guest_can_pause: guestCanPause,\n        code: props.roomCodeProp,\n      }),\n    }\n\n    const feedBack = await fetch('/api/update-room', requestOptions)\n    const jsonFeedBack = await feedBack.json()\n    console.log(jsonFeedBack)\n    if (feedBack.ok) {\n      setSuccessMsg('Room updated successfully')\n    } else {\n      setErrorMsg('Error updating room...')\n    }\n    props.updateCallBackProp()\n  }\n\n  const renderCreateButtons = () => {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid item xs={12}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={handleRoomButtonPressed}\n          >\n            Create A Room\n          </Button>\n        </Grid>\n        <Grid item xs={12}>\n          <Button color=\"primary\" variant=\"contained\" to=\"/\" component={Link}>\n            Back\n          </Button>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  const renderUpdateButtons = () => {\n    return (\n      <Grid item xs={12}>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={handleUpdateButtonPressed}\n        >\n          Update Room\n        </Button>\n      </Grid>\n    )\n  }\n\n  const title = props.updateProp ? 'Update Room' : 'Create a Room'\n\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      spacing={1}\n    >\n      <Grid item xs={12}>\n        <Typography component=\"h4\" variant=\"h4\">\n          <Collapse in={errorMsg != '' || successMsg != ''}>\n            {successMsg}\n          </Collapse>\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <Typography component=\"h3\" variant=\"h3\">\n          {title}\n        </Typography>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl component=\"fieldset\">\n          <FormLabel component=\"legend\">\n            Guest Control of Playback State\n          </FormLabel>\n          <RadioGroup\n            row\n            defaultValue={props.guestCanPauseProp.toString()}\n            onChange={handleGuestCanPause}\n            aria-label=\"Guest Control of Playback State\"\n          >\n            <FormControlLabel\n              value=\"true\"\n              control={<Radio color=\"primary\" />}\n              label=\"Play/Pause\"\n              labelPlacement=\"bottom\"\n            />\n            <FormControlLabel\n              value=\"false\"\n              control={<Radio color=\"secondary\" />}\n              label=\"No control\"\n              labelPlacement=\"bottom\"\n            />\n          </RadioGroup>\n        </FormControl>\n      </Grid>\n      <Grid item xs={12}>\n        <FormControl>\n          <TextField\n            required={true}\n            type=\"number\"\n            onChange={handleVotesChange}\n            defaultValue={votesToSkip}\n            inputProps={{ min: 1, style: { textAlign: 'center' } }}\n          />\n          <FormHelperText component=\"div\">\n            <p>Votes Required to Skip Song</p>\n          </FormHelperText>\n        </FormControl>\n      </Grid>\n      {props.updateProp ? renderUpdateButtons() : renderCreateButtons()}\n    </Grid>\n  )\n}\n\nexport default CreateRoomPage\n","import React, { useState, useEffect } from 'react'\nimport { Button, Grid, Typography } from '@mui/material'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport CreateRoomPage from './CreateRoomPage'\n\nconst Room: React.FC<{ leaveRoomCallBack: Function }> = props => {\n  const [votesToSkip, setVotesToSkip] = useState(2)\n  const [guestCanPause, setGuestCanPause] = useState(false)\n  const [isHost, setIsHost] = useState(false)\n  const [showSettings, setShowSettings] = useState(false)\n  const [spotifyAuthenticated, setSpotifyAuthenticated] = useState(false)\n  const [song, setSong] = useState(null)\n\n  const { roomCode } = useParams()\n\n  let navigate = useNavigate()\n\n  const getRoomDetails = async () => {\n    const response = await fetch('/api/get-room' + '?code=' + roomCode)\n    if (!response.ok) {\n      props.leaveRoomCallBack()\n      navigate('/')\n    }\n    const jsonFeedBack = await response.json()\n\n    setVotesToSkip(jsonFeedBack.votes_to_skip)\n    setGuestCanPause(jsonFeedBack.guest_can_pause)\n    setIsHost(jsonFeedBack.is_host)\n  }\n\n  const authenticateSpotify = async () => {\n    const response = await fetch('/spotify/is-authenticated')\n    const responseJson = await response.json()\n    setSpotifyAuthenticated(responseJson.status)\n    console.log(responseJson.status)\n\n    if (!responseJson.status) {\n      const response = await fetch('/spotify/get-auth-url')\n      const responseJson = await response.json()\n      window.location.replace(responseJson.url)\n    }\n  }\n\n  const getCurrentSong = async () => {\n    const response = await fetch('/spotify/current-song')\n    console.log(response)\n    if (!response.ok) {\n      console.log('response not ok')\n      return {}\n    } else {\n      console.log('response ok')\n      const responseJson = await response.json()\n      setSong(responseJson)\n      console.log(responseJson)\n    }\n  }\n\n  const leaveRoomHandler = async () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n    }\n    await fetch('/api/leave-room', requestOptions)\n    props.leaveRoomCallBack()\n    navigate('/')\n  }\n\n  const renderSettingsButton = () => {\n    return (\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => setShowSettings(true)}\n        >\n          Settings\n        </Button>\n      </Grid>\n    )\n  }\n\n  const renderSettings = () => {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={1}\n      >\n        <Grid item xs={12}>\n          <CreateRoomPage\n            updateProp={true}\n            votesToSkipProp={votesToSkip}\n            guestCanPauseProp={guestCanPause}\n            roomCodeProp={roomCode!}\n            updateCallBackProp={getRoomDetails}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <Button\n            color=\"secondary\"\n            variant=\"contained\"\n            onClick={() => setShowSettings(false)}\n          >\n            Close\n          </Button>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  useEffect(() => {\n    getRoomDetails()\n  }, [])\n\n  useEffect(() => {\n    console.log('checking if host...')\n    authenticateSpotify()\n  }, [isHost])\n\n  useEffect(() => {\n    if (spotifyAuthenticated) {\n      const interval = setInterval(getCurrentSong, 1000)\n      return () => {\n        clearInterval(interval)\n      }\n    }\n  })\n\n  if (showSettings) {\n    return renderSettings()\n  }\n  return (\n    <Grid\n      container\n      direction=\"column\"\n      justifyContent=\"center\"\n      alignItems=\"center\"\n      spacing={1}\n    >\n      <Grid item xs={12}>\n        <Typography variant=\"h4\" component=\"h4\">\n          Code: {roomCode}\n        </Typography>\n      </Grid>\n      {song}\n      {isHost ? renderSettingsButton() : null}\n      <Grid item xs={12}>\n        <Button\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={leaveRoomHandler}\n        >\n          Leave Room\n        </Button>\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default Room\n","import React, { useState, useEffect } from 'react'\nimport RoomJoinPage from './RoomJoinPage'\nimport CreateRoomPage from './CreateRoomPage'\nimport Room from './Room'\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  Navigate,\n} from 'react-router-dom'\nimport { Button, Grid, Typography, ButtonGroup } from '@mui/material'\n\nconst HomePage = () => {\n  const [roomCode, setRoomCode] = useState(null)\n\n  useEffect(() => {\n    checkIfInRoom()\n  }, [])\n\n  const checkIfInRoom = async () => {\n    const feedBack = await fetch('/api/user-in-room')\n    const jsonFeedBack = await feedBack.json()\n    setRoomCode(jsonFeedBack.code)\n  }\n\n  const HomePageComponent = () => {\n    return (\n      <Grid\n        container\n        direction=\"column\"\n        justifyContent=\"center\"\n        alignItems=\"center\"\n        spacing={3}\n      >\n        <Grid item xs={12}>\n          <Typography variant=\"h3\" component=\"h3\">\n            Music Listening With Friends\n          </Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <ButtonGroup disableElevation variant=\"contained\" color=\"primary\">\n            <Button color=\"primary\" to=\"/join\" component={Link}>\n              Join a Room\n            </Button>\n            <Button color=\"secondary\" to=\"/create\" component={Link}>\n              Create a Room\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n    )\n  }\n\n  const clearRoomCode = () => {\n    setRoomCode(null)\n  }\n\n  return (\n    <Router>\n      <Routes>\n        <Route\n          path=\"/\"\n          element={\n            roomCode ? (\n              <Navigate to={`/room/${roomCode}`} />\n            ) : (\n              <HomePageComponent />\n            )\n          }\n        />\n        <Route path=\"/join\" element={<RoomJoinPage />} />\n        <Route\n          path=\"/create\"\n          element={\n            <CreateRoomPage\n              votesToSkipProp={2}\n              guestCanPauseProp={true}\n              updateProp={false}\n              roomCodeProp={''}\n              updateCallBackProp={() => {}}\n            />\n          }\n        />\n        <Route\n          path=\"/room/:roomCode\"\n          element={<Room leaveRoomCallBack={clearRoomCode} />}\n        />\n      </Routes>\n    </Router>\n  )\n}\n\nexport default HomePage\n","import React from 'react'\nimport './App.css'\nimport HomePage from './components/HomePage'\n\nfunction App() {\n  return (\n    <div className=\"center\">\n      <HomePage />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}